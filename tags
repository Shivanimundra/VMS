!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
addBranch	branch.c	/^void addBranch( char *bName, struct branchNode* branchHead )$/;"	f
addVehicle	vehicle.c	/^void addVehicle(char * vNumber, int r, struct vehicleNode* vehicleHead )$/;"	f
branchName	branch.h	/^	char  branchName[ 10 ];$/;"	m	struct:branchNode
branchNode	branch.h	/^struct branchNode$/;"	s
branchVehicleOnRent	branch.c	/^int branchVehicleOnRent;$/;"	v
displayBranch	branch.c	/^void displayBranch( struct branchNode* branchHead )$/;"	f
displayVehicle	vehicle.c	/^void displayVehicle( struct vehicleNode* vehicleHead )$/;"	f
freeVehicleInBranch	branch.c	/^int freeVehicleInBranch;$/;"	v
main	main.c	/^int main()$/;"	f
nextBranchInfo	branch.h	/^	struct branchNode* nextBranchInfo;$/;"	m	struct:branchNode	typeref:struct:branchNode::branchNode
nextVehicleInfo	vehicle.h	/^        struct vehicleNode* nextVehicleInfo;$/;"	m	struct:vehicleNode	typeref:struct:vehicleNode::vehicleNode
numberOfVehicle	branch.c	/^int numberOfVehicle;$/;"	v
removeBranch	branch.c	/^void removeBranch()$/;"	f
removeVehicle	vehicle.c	/^void removeVehicle()$/;"	f
vehicleNode	vehicle.h	/^struct vehicleNode$/;"	s
vehicleNumber	vehicle.h	/^	char vehicleNumber[ 10 ];  $/;"	m	struct:vehicleNode
vehicleOnRent	vehicle.h	/^	bool  vehicleOnRent;            $/;"	m	struct:vehicleNode
